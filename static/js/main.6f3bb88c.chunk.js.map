{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Reweet.js","components/ReweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Reweet","reweetObj","isOwner","editing","setEditing","text","newReweet","setNewReweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","ReweetFactory","userObj","reweet","setReweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuid","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","reweets","setReweets","useEffect","onSnapshot","snapshot","reweetArray","docs","map","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","ind","indexOf","end","substring","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f3bb88c.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\n        <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Sign In\"} />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\" >{newAccount ? \"Sign In\" : \"Create Account\"}</span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Reweet = ({ reweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newReweet, setNewReweet] = useState(reweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this reweet?\");\n    if (ok) {\n      await dbService.doc(`reweets/${reweetObj.id}`).delete();\n      await storageService.refFromURL(reweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(reweetObj, newReweet);\n    await dbService.doc(`reweets/${reweetObj.id}`).update({\n      text: newReweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewReweet(value);\n  };\n  return (\n    <div className=\"reweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container reweetEdit\">\n                <input type=\"text\" autoFocus className=\"formInput\" placeholder=\"edit your reweet\" value={newReweet} required onChange={onChange} />\n                <input type=\"submit\" value=\"Update Reweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{reweetObj.text}</h4>\n          {reweetObj.attachmentUrl && <img src={reweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"reweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Reweet;\n","import { storageService, dbService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ReweetFactory = ({ userObj }) => {\n  const [reweet, setReweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (reweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuid()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const reweetObj = {\n      text: reweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"reweets\").add(reweetObj);\n    setReweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setReweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input className=\"factoryInput__input\" value={reweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ReweetFactory;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Reweet from \"components/Reweet\";\nimport ReweetFactory from \"components/ReweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [reweets, setReweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"reweets\").onSnapshot((snapshot) => {\n      const reweetArray = snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n      setReweets(reweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <ReweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {reweets.map((reweet) => (\n          <Reweet key={reweet.id} reweetObj={reweet} isOwner={reweet.creatorId === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input onChange={onChange} type=\"text\" autoFocus placeholder=\"Display name\" value={newDisplayName} className=\"formInput\" />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>{userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}</span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth></Auth>\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        if (user.displayName == null) {\n          const ind = user.email.indexOf(\"@\");\n          const end = user.email.substring(0, ind);\n          user.updateProfile({ displayName: end });\n        }\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"Initializing\"}\n      <footer>&copy; Rewitter {new Date().getFullYear()} </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}